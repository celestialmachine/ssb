// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ssb_api.Models;

#nullable disable

namespace ssb_api.Migrations
{
    [DbContext(typeof(BudgetContext))]
    [Migration("20230823035404_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ssb_api.Models.BudgetEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"), 1L, 1);

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetItemItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.HasIndex("BudgetItemItemId");

                    b.ToTable("BudgetEvents");

                    b.HasData(
                        new
                        {
                            EventId = 2,
                            Balance = 200m,
                            Date = new DateTime(2023, 9, 21, 20, 54, 4, 83, DateTimeKind.Local).AddTicks(466),
                            DueDate = new DateTime(2023, 9, 21, 20, 54, 4, 83, DateTimeKind.Local).AddTicks(481),
                            IsPaid = false,
                            ItemId = 1,
                            Name = "School books Fall 23",
                            Note = "This event has no item reference"
                        });
                });

            modelBuilder.Entity("ssb_api.Models.BudgetItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occurrence")
                        .HasColumnType("int");

                    b.Property<int?>("OccurrenceDay")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("BudgetItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Amount = 0m,
                            Name = "Utility",
                            Occurrence = 0
                        },
                        new
                        {
                            ItemId = 2,
                            Amount = 1500m,
                            Description = "Level 9000 Apartments",
                            Name = "Rent",
                            Occurrence = 1,
                            OccurrenceDay = 1
                        });
                });

            modelBuilder.Entity("ssb_api.Models.BudgetEvent", b =>
                {
                    b.HasOne("ssb_api.Models.BudgetItem", "BudgetItem")
                        .WithMany("Events")
                        .HasForeignKey("BudgetItemItemId");

                    b.Navigation("BudgetItem");
                });

            modelBuilder.Entity("ssb_api.Models.BudgetItem", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
